.checkboxes-mode(ng-class="{'with-more': $ctrl.hasMore()}" data-main-input)
    ul(ng-ref="ulElement")
        li.av-item(ng-repeat="$item in $ctrl.getAcceptableValues() track by $index")
            include checkbox-template.tpl.pug

        li.more-container(class="{{uuid}}" ng-if="$ctrl.hasMore()")
            style(type="text/css").
                acceptable-value-editor #check-{{uuid}}:checked ~ ul {
                    max-height: {{'{' + '{ulElement[0].children[0].offsetHeight * $ctrl.getMoreCount()}' + '}'}}px;
                }

            input.more-checkbox(id="check-{{uuid}}" type="checkbox" ng-model="expanded")
            label.more-label(for="check-{{uuid}}")
                i.glyphicon(ng-class="expanded ? 'glyphicon-chevron-up' : 'glyphicon-chevron-down'")
                span(ng-show="expanded") {{ '{' + '{$ctrl.acceptableValueEditorLocalizationsService.getLocalization("less")}' + '}' }}
                span(ng-hide="expanded") {{ '{' + '{$ctrl.acceptableValueEditorLocalizationsService.getLocalization("more")}' + '}' }} ({{ '{' + '{$ctrl.getMoreCount()}' + '}' }})

            ul
                li.av-item(ng-repeat="$item in $ctrl.getAcceptableValues($ctrl.options.showFirstCount, 9007199254740990) track by $index")
                    include checkbox-template.tpl.pug

    .btn-group
        button.btn.btn-default.btn-xs.select-all(type="button" ng-disabled="$ctrl.model.length === $ctrl.options.acceptableValues.length" ng-click="$ctrl.model = $ctrl.options.acceptableValues.slice()") {{ '{' + '{$ctrl.acceptableValueEditorLocalizationsService.getLocalization("selectAll")}' + '}' }}
        button.btn.btn-default.btn-xs.deselect-all(type="button" ng-disabled="$ctrl.model.length === 0" ng-click="$ctrl.model = []") {{ '{' + '{$ctrl.acceptableValueEditorLocalizationsService.getLocalization("deselectAll")}' + '}' }}
