.form-control.multi-input-group
    .input-group.from(ng-class="'input-group-' + $ctrl.valueEditorController.size")
        label.input-group-addon(for="{{$ctrl.valueEditorController.editorId}}") {{$ctrl.localize('from')}}
        input.form-control(
            id="{{$ctrl.valueEditorController.editorId}}"

            type="number"

            ng-model="$ctrl.modelFrom"
            ng-change="$ctrl.setNgModel()"

            ng-class="'input-' + $ctrl.valueEditorController.size"

            ng-ref="$ctrl.fromRef"

            ng-disabled="$ctrl.valueEditorController.isDisabled"

            ng-blur="$ctrl.setTouched()"

            kp-focusable-input="$ctrl.connectToFocusApi($api)"
        )

    .input-group.to(ng-class="'input-group-' + $ctrl.valueEditorController.size")
        label.input-group-addon(for="{{$ctrl.valueEditorController.editorId}}_to") {{$ctrl.localize('to')}}
        input.form-control(
            id="{{$ctrl.valueEditorController.editorId}}_to"
            type="number"

            ng-model="$ctrl.modelTo"
            ng-change="$ctrl.setNgModel()"

            ng-ref="$ctrl.toRef"

            ng-class="'input-' + $ctrl.valueEditorController.size"

            ng-disabled="$ctrl.valueEditorController.isDisabled"

            ng-blur="$ctrl.setTouched()"
        )

input.validation-helper(
    type="text"
    name="{{$ctrl.valueEditorController.editorName}}"

    ng-model="$ctrl.model"
    ng-model-options="{ getterSetter: true}"

    number-range-validations="$ctrl.validNumber"

    kp-async-validation="$ctrl.valueEditorController.validations.async"

    error-messages

    data-main-input
)
